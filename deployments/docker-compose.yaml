services:
  mysql:
    image: mysql:8.0
    restart: always
    container_name: mysqldb
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: prices
      MYSQL_USER: prices
      MYSQL_PASSWORD: 1q2w3e
    volumes:
      - ../scripts/setup_db.sql:/docker-entrypoint-initdb.d/setup_db.sql
      - db_data:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 30s
      retries: 10
    command:
      - --local-infile=1

  fileParser:
    image: files:latest
    restart: always
    container_name: fileParser
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ../test/data:/app/data

  loadBalancer:
    image: load_balancer:latest
    restart: always
    container_name: loadBalancer
    depends_on:
      apiServer1:
        condition: service_started
      apiServer2:
        condition: service_started
      apiServer3:
        condition: service_started
    ports:
      - "80:80"

  apiServer1:
    hostname: apiServer1
    image: prices:latest
    restart: always
    container_name: apiServer1
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "8080:8080"
  apiServer2:
    hostname: apiServer2
    image: prices:latest
    restart: always
    container_name: apiServer2
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "8081:8080"
  apiServer3:
    hostname: apiServer3
    image: prices:latest
    restart: always
    container_name: apiServer3
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "8082:8080"

  prometheus:
    image: prom/prometheus:v2.32.1
    user: root
    volumes:
      - "./prometheus.yaml:/etc/prometheus/prometheus.yaml"
      - "prometheus_data:/prometheus"
    command:
      - "--config.file=/etc/prometheus/prometheus.yaml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--web.enable-lifecycle"
    ports:
      - "9090:9090"
    depends_on:
      apiServer1:
        condition: service_started
      apiServer2:
        condition: service_started
      apiServer3:
        condition: service_started


  grafana:
    image: grafana/grafana
    user: root
    ports:
      - "3000:3000"
    volumes:
      - "grafana_data:/var/lib/grafana"
      - "./grafana_provisioning/:/etc/grafana/provisioning/"
    environment:
      - GF_SECURITY_ADMIN_NAME=admin
      - GF_SECURITY_ADMIN_PASSWORD=1q2w3e
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      prometheus:
        condition: service_started


volumes:
  db_data:
  prometheus_data:
  grafana_data:
networks:
  prices:
    driver: bridge