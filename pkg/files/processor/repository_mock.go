// Code generated by MockGen. DO NOT EDIT.
// Source: processor.go

// Package processor is a generated GoMock package.
package processor

import (
	context "context"
	files "prices/pkg/files"
	models "prices/pkg/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockFileQueue is a mock of FileQueue interface.
type MockFileQueue struct {
	ctrl     *gomock.Controller
	recorder *MockFileQueueMockRecorder
}

// MockFileQueueMockRecorder is the mock recorder for MockFileQueue.
type MockFileQueueMockRecorder struct {
	mock *MockFileQueue
}

// NewMockFileQueue creates a new mock instance.
func NewMockFileQueue(ctrl *gomock.Controller) *MockFileQueue {
	mock := &MockFileQueue{ctrl: ctrl}
	mock.recorder = &MockFileQueueMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFileQueue) EXPECT() *MockFileQueueMockRecorder {
	return m.recorder
}

// Data mocks base method.
func (m *MockFileQueue) Data() (<-chan files.File, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Data")
	ret0, _ := ret[0].(<-chan files.File)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Data indicates an expected call of Data.
func (mr *MockFileQueueMockRecorder) Data() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Data", reflect.TypeOf((*MockFileQueue)(nil).Data))
}

// MockPricesRepo is a mock of PricesRepo interface.
type MockPricesRepo struct {
	ctrl     *gomock.Controller
	recorder *MockPricesRepoMockRecorder
}

// MockPricesRepoMockRecorder is the mock recorder for MockPricesRepo.
type MockPricesRepoMockRecorder struct {
	mock *MockPricesRepo
}

// NewMockPricesRepo creates a new mock instance.
func NewMockPricesRepo(ctrl *gomock.Controller) *MockPricesRepo {
	mock := &MockPricesRepo{ctrl: ctrl}
	mock.recorder = &MockPricesRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPricesRepo) EXPECT() *MockPricesRepoMockRecorder {
	return m.recorder
}

// CreateMany mocks base method.
func (m *MockPricesRepo) CreateMany(ctx context.Context, prices []*models.Price) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateMany", ctx, prices)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateMany indicates an expected call of CreateMany.
func (mr *MockPricesRepoMockRecorder) CreateMany(ctx, prices interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateMany", reflect.TypeOf((*MockPricesRepo)(nil).CreateMany), ctx, prices)
}

// ImportFile mocks base method.
func (m *MockPricesRepo) ImportFile(ctx context.Context, filePath string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ImportFile", ctx, filePath)
	ret0, _ := ret[0].(error)
	return ret0
}

// ImportFile indicates an expected call of ImportFile.
func (mr *MockPricesRepoMockRecorder) ImportFile(ctx, filePath interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ImportFile", reflect.TypeOf((*MockPricesRepo)(nil).ImportFile), ctx, filePath)
}
